allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    group = 'be.isach'
    version = '2.5.10-RELEASE'

    compileJava.options.encoding = 'UTF-8'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(16)
		}
	}

    configurations {
        shaded
        compile.extendsFrom shaded
    }

    processResources {
        inputs.property("version", project.version)

        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                'VERSION': project.version.split('-')[0]
        ]
    }

    afterEvaluate {
        jar {
            dependsOn configurations.shaded
            from configurations.shaded.collect {
                it.isDirectory() ?
                        it :
                        zipTree(it)
            }
        }
    }
}

// Useful for local testing, with a testserver folder containing your testing server
boolean local = false
if (local) libsDirName = '../testserver/plugins'


abstract class VersionedJarTask extends Jar {
    @Inject
    public VersionedJarTask(int mcVersion) {
        archiveBaseName = project.objects.property(String.class).value('UltraCosmetics-1.' + mcVersion.toString())
        def versionProjects = project.subprojects.findAll { it.name.startsWith("v1_" + mcVersion.toString() + "_") || it.name.equals("core") }
        versionProjects.each {
            dependsOn(":$it.name:compileJava")
        }
        from (project.files(versionProjects.collect { it.sourceSets.main.output }))
    }
}

// redundant because of default jar task?
tasks.register("fullJar", Jar) {
    archiveBaseName = 'UltraCosmetics'
    dependsOn(subprojects.collect { ":$it.name:compileJava" })
    from files(subprojects.collect { it.sourceSets.main.output })
}

final MIN_MC_VERSION = 8
final MAX_MC_VERSION = 17

for (int i = MIN_MC_VERSION; i <= MAX_MC_VERSION; i++) {
    tasks.register("jar1" + i.toString(), VersionedJarTask, i)
}

dependencies {
    subprojects.each { p ->
        shaded(p) {
            transitive false
        }
    }
}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        // Vault
        maven {
            url 'https://nexus.hc.to/content/repositories/pub_releases'
        }
        // Lib's Disguises
        maven {
            url 'https://repo.md-5.net/content/groups/public/'
        }

        maven {
            url 'https://repo.aikar.co/nexus/content/groups/aikar'
        }

        maven {
            url 'https://repo.isach.be'
        }

        // BungeeCord
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }

        // PlaceholderAPI
        maven {
            url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }

        // PlayerPoints
        maven {
            url 'https://repo.dakanilabs.com/repository/public/'
        }
        
        // Spigot for 1.16.4
        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
    }
}

// TODO: make this into a more reusable task, potentially as an extension to VersionedJarTask
tasks.register("obfuscate") {
    dependsOn jar
    description 'Generates an obfuscated version of the jar for use with Spigot.'
    group = 'jar preparation'
    ext.toolingDir = System.getProperty("user.dir")
    ext.homeDir = project.gradle.gradleUserHomeDir.parent
	doLast {
		exec {
			workingDir "${buildDir}"
			commandLine 'java', '-cp', ext.toolingDir + '\\tooling\\specialsource\\SpecialSource.jar;' + ext.homeDir + '\\.m2\\repository\\org\\spigotmc\\spigot\\1.17.1-R0.1-SNAPSHOT\\spigot-1.17.1-R0.1-SNAPSHOT-remapped-mojang.jar',
                'net.md_5.specialsource.SpecialSource', '--live', '--only', 'be/isach/ultracosmetics/v1_17_R1', '-q',
                '-i', 'libs\\' + rootProject.name + '-' + rootProject.version + '.jar',
				'-o', 'libs\\' + rootProject.name + '-' + rootProject.version + '-obf.jar',
                '-m', ext.homeDir + '\\.m2\\repository\\org\\spigotmc\\minecraft-server\\1.17.1-R0.1-SNAPSHOT\\minecraft-server-1.17.1-R0.1-SNAPSHOT-maps-mojang.txt',
				'--reverse'
		}
		exec {
			workingDir "${buildDir}"
			commandLine 'java', '-cp', ext.toolingDir + '\\tooling\\specialsource\\SpecialSource.jar;' + ext.homeDir + '\\.m2\\repository\\org\\spigotmc\\spigot\\1.17.1-R0.1-SNAPSHOT\\spigot-1.17.1-R0.1-SNAPSHOT-remapped-obf.jar',
                'net.md_5.specialsource.SpecialSource', '--live', '--only', 'be/isach/ultracosmetics/v1_17_R1', '-q',
				'-i', 'libs\\' + rootProject.name + '-' + rootProject.version + '-obf.jar',
                '-o', 'libs\\' + rootProject.name + '-' + rootProject.version + '-remapped.jar',
                '-m', ext.homeDir + '\\.m2\\repository\\org\\spigotmc\\minecraft-server\\1.17.1-R0.1-SNAPSHOT\\minecraft-server-1.17.1-R0.1-SNAPSHOT-maps-spigot.csrg'
		}
	}
}
